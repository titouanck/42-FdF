/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   old                                                :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: tchevrie <tchevrie@student.42.fr>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2022/12/08 18:09:25 by tchevrie          #+#    #+#             */
/*   Updated: 2022/12/08 18:09:26 by tchevrie         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

// void	fdf_relief(t_mlx *mlxdata, t_mapctr *mapctr)
// {
// 	long	x;
// 	long	y;
// 	float	angle;

// 	if (mapctr->range == 0)
// 		return ;
// 	y = -1;
// 	while (++y < mapctr->height)
// 	{
// 		x = -1;
// 		while (++x < mapctr->width)
// 		{
// 			((mapctr->map)[x][y]).x -= ((((float)mapctr->range - ((float)mapctr->max - (float)(mapctr->map[x][y].z))) / (float)mapctr->range) * 0.5) * ((hypot(mlxdata->scale, mlxdata->scale)) / 2);
// 			((mapctr->map)[x][y]).y -= ((((float)mapctr->range - ((float)mapctr->max - (float)(mapctr->map[x][y].z))) / (float)mapctr->range) * 0.5) * ((hypot(mlxdata->scale, mlxdata->scale)) / 2);
// 		}
// 	}
// }

// mlxdata.win = mlx_new_window(mlxdata.ptr, \
		// 		mlxdata.mapctr.width * scale * PERSPECTIVE / sqrt(2) + mlxdata.mapctr.height * scale * PERSPECTIVE / sqrt(2), \
		// 		mlxdata.mapctr.height * scale / sqrt(2) + mlxdata.mapctr.width * scale / sqrt(2), "FdF");